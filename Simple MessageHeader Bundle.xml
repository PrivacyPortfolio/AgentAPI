<?xml version="1.0" encoding="utf-8"?>

<!-- Request as a Message type on Bundle -->

<Bundle xmlns="http://hl7.org/fhir">
  xs:element name="Bundle" type="Bundle"
  <!-- A container for a collection of resources. -->
  <xs:complexType name="Bundle">
	<identifier>
		xs:element name="identifier" minOccurs="0" maxOccurs="1" type="Identifier"
    <!-- A persistent identifier for the bundle that won't change as a bundle is copied from server to server.-->		
		<xs:complexType name="Identifier">
		<use>
			<value>usual, official, temp, secondary</value>
		</use>
		<label></label>
		<system></system>
		<value></value>
		<period>
			<start></start>
			<end></end>
		</period>
		<assigner>
			<reference></reference>
			<display></display>
		</assigner>
		</xs:complexType>
	</identifier>
	<type>
		xs:element name="type" minOccurs="1" maxOccurs="1" type="BundleType"
		<!-- Indicates the purpose of this bundle - how it is intended to be used. -->
		<xs:complexType name="BundleType">
			<xs:attribute name="value" type="BundleType-list" use="optional"/>
		</xs:complexType>
		<xs:simpleType name="BundleType-list">
			<xs:enumeration value="document" />
			<xs:enumeration value="message" />
			<xs:enumeration value="transaction" />
			<xs:enumeration value="transaction-response" />
			<xs:enumeration value="batch" />
			<xs:enumeration value="batch-response" />
			<xs:enumeration value="history" />
			<xs:enumeration value="searchset" />
			<xs:enumeration value="collection" />
		</xs:simpleType>
		</xs:complexType>
  </type>
	<timestamp>
	  xs:element name="timestamp" minOccurs="0" maxOccurs="1" type="instant"
	  <!-- The date/time that the bundle was assembled - i.e. when the resources were placed in the bundle.  -->
	</timestamp>
	<total>
	  xs:element name="total" minOccurs="0" maxOccurs="1" type="unsignedInt"
	  <!-- If a set of search matches, this is the total number of entries of type 'match' across all pages 
	  in the search.  It does not include search.mode = 'include' or 'outcome' entries and it does not provide
	  a count of the number of entries in the Bundle.  -->  
	</total>
	<link>xs:element name="link" type="Bundle.Link" minOccurs="0" maxOccurs="unbounded"
    <!--  A series of links that provide context to this bundle.  -->		
		<xs:complexType name="Bundle.Link">
		<relation>
		  xs:element name="relation" minOccurs="1" maxOccurs="1" type="string"
		  <!-- A name which details the functional use for this link -->
	  </relation>
		<url>
		  xs:element name="url" minOccurs="1" maxOccurs="1" type="uri"
		  <!-- The reference details for the link. -->
		</url>
		</xs:complexType>
	</link>
	<entry>
  <!-- can be resource or request or search -->
		<link>
		  xs:element name="link" type="Bundle.Link" minOccurs="0" maxOccurs="unbounded"
		  <!-- A series of links that provide context to this entry.  -->
		</link>
		<fullUrl>
		  xs:element name="fullUrl" minOccurs="0" maxOccurs="1" type="uri"
		  <!-- The Absolute URL for the resource.  The fullUrl SHALL NOT disagree with the id in the resource 
		  - i.e. if the fullUrl is not a urn:uuid, the URL shall be version-independent URL consistent with 
		  the Resource.id. The fullUrl is a version independent reference to the resource. The fullUrl element 
		  SHALL have a value except that: 
      * fullUrl can be empty on a POST (although it does not need to when specifying a temporary id for reference in the bundle)
      * Results from operations might involve resources that are not identified. -->
		</fullUrl>
		<!-- resource -->
		<resource>
		  xs:element name="resource" minOccurs="0" maxOccurs="1" type="ResourceContainer"
		  <!-- The Resource for the entry. The purpose/meaning of the resource is determined by the Bundle.type. -->
    	<MessageHeader>
    	<!-- The header for a message exchange that is either requesting or responding to an action.  
    	The reference(s) that are the subject of the action as well as other information related to the action 
    	are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource 
    	in the bundle.  -->
				<id value="267b18ce-3d37-4581-9baa-6fada338038b"/>
				<text>
				  <!-- example shows text node as text-value of this element, but not in schema...-->
					<status value="generated"/>
					<div xmlns="http://www.w3.org/1999/xhtml">

						<p>
							This message is an inquiry for instructions about requesting Patient records.
						</p>

					</div>
				</text>
    		<!-- <xs:choice minOccurs="1" maxOccurs="1" > -->
    		<eventCoding>
    		  type="Coding"
    		  <!-- Code that identifies the event this message represents and connects it with its definition. 
    		  Events defined as part of the FHIR specification have the system value 
    		  &quot;http://terminology.hl7.org/CodeSystem/message-events&quot;.  
    		  Alternatively uri to the EventDefinition. -->
    		</eventCoding>
    		<eventUri>
    		  type="uri"
    		</eventUri>
    		<!-- </xs:choice> -->
    		<destination>
    			minOccurs="0" maxOccurs="unbounded"
    			<!-- The destination application which the message is intended for.  -->
    			<name>
    			  minOccurs="0" maxOccurs="1" type="string"
    			  <!-- Human-readable name for the target system.  -->
    			</name>
    			<target>
    			  minOccurs="0" maxOccurs="1" type="Reference"
    			  <!-- Identifies the target end system in situations where the initial message transmission 
    			  is to an intermediary system.  -->
    			</target>
    			<endpoint>
    			  minOccurs="1" maxOccurs="1" type="url"
    			  <!-- Indicates where the message should be routed to.  -->
    			</endpoint>
    			<receiver>
    			  minOccurs="0" maxOccurs="1" type="Reference"
    			  <!-- Allows data conveyed by a message to be addressed to a particular person 
    			  or department when routing to a specific application isn't sufficient.  -->
    			</receiver>
    		</destination>
    		<sender>
    		  minOccurs="0" maxOccurs="1" type="Reference"
    		  <!-- Identifies the sending system to allow the use of a trust relationship. -->
    		</sender>
    		<enterer>
    		  minOccurs="0" maxOccurs="1" type="Reference"
    		  <!-- The person or device that performed the data entry leading to this message. 
    		  When there is more than one candidate, pick the most proximal to the message. 
    		  Can provide other enterers in extensions. -->
    		</enterer>
    		<author>
    		  minOccurs="0" maxOccurs="1" type="Reference"
    		  <!-- The logical author of the message - the person or device that decided the described event should happen. 
    		  When there is more than one candidate, pick the most proximal to the MessageHeader. 
    		  Can provide other authors in extensions.  -->
    		</author>
    		<source>
    			type="MessageHeader.Source" minOccurs="1" maxOccurs="1"
    			<!-- The source application from which this message originated.  
    			The header for a message exchange that is either requesting or responding to an action.  
    			The reference(s) that are the subject of the action as well as other information related to the action 
    			are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource
    			in the bundle.	-->
    			<name>
    			  minOccurs="0" maxOccurs="1" type="string"
    			  <!-- Human-readable name for the source system. -->  
    			</name>
    			<software>
    			  minOccurs="0" maxOccurs="1" type="string"
    			  <!-- May include configuration or other information useful in debugging. -->
    			</software>
    			<version>
    			  minOccurs="0" maxOccurs="1" type="string"
    			  <!-- Can convey versions of multiple systems in situations where a message passes through multiple hands. -->
    			</version>
    			<contact>
    			  minOccurs="0" maxOccurs="1" type="ContactPoint"
    			  <!-- An e-mail, phone, website or other contact point to use to resolve issues with message communications. -->
    			</contact>
    			<endpoint>
    			  minOccurs="1" maxOccurs="1" type="url"
    			  <!-- Identifies the routing target to send acknowledgements to.  -->
    			</endpoint>
    		</source>
    		<responsible>
    		  minOccurs="0" maxOccurs="1" type="Reference"
    		  <!-- The person or organization that accepts overall responsibility for the contents of the message. 
    		  The implication is that the message event happened under the policies of the responsible party.  -->
    		</responsible>
    		<reason>
    		  minOccurs="0" maxOccurs="1" type="CodeableConcept"
    		  <!--  Coded indication of the cause for the event - 
    		  indicates a reason for the occurrence of the event that is a focus of this message.  -->
    		</reason>
    		<response>
    			type="MessageHeader.Response" minOccurs="0" maxOccurs="1"
    			<!-- Information about the message that this message is a response to.  
    			Only present if this message is a response.   -->
    			<identifier>
    			  minOccurs="1" maxOccurs="1" type="id"
    			  <!-- The MessageHeader.id of the message to which this message is a response. -->
    			</identifier>
    			<code>
    			  <!-- Code that identifies the type of response to the message - 
    			  whether it was successful or not, and whether it should be resent or not. -->
    			  minOccurs="1" maxOccurs="1" type="ResponseType"
            <xs:simpleType name="ResponseType-list">
              <xs:enumeration value="ok" />
              <xs:enumeration value="transient-error" />
              <xs:enumeration value="fatal-error" />
            </xs:simpleType>
    			</code>
    			<details>
    			  minOccurs="0" maxOccurs="1" type="Reference"
    			  <!-- Full details of any issues found in the message. -->
    			</details>
    		</response>
    		<focus>
    		  minOccurs="0" maxOccurs="unbounded" type="Reference"
    		  <!--  The actual data of the message - a reference to the root/focus class of the event.  -->
    		</focus>
    		<definition>
    		  minOccurs="0" maxOccurs="1" type="canonical"
    		  <!-- Permanent link to the MessageDefinition for this message.  -->
    		</definition>
    	</MessageHeader>
		</resource>
		<search>
      xs:element name="search" type="Bundle.Search" minOccurs="0" maxOccurs="1"		  
		  <!-- Information about the search process that lead to the creation of this entry. -->
      <xs:complexContent>
      <mode>
        xs:element name="mode" minOccurs="0" maxOccurs="1" type="SearchEntryMode"
        <!-- Why this entry is in the result set - whether it's included as a match 
        or because of an _include requirement, or to convey information or warning information 
        about the search process.  -->
				<xs:complexType name="SearchEntryMode">
					<value>xs:attribute name="value" type="SearchEntryMode-list" use="optional"</value>
				</xs:complexType>
				<xs:simpleType name="SearchEntryMode-list">
					<xs:enumeration value="match" />
					<xs:enumeration value="include" />
					<xs:enumeration value="outcome" />
				</xs:simpleType>
      </mode>
      <score>
        xs:element name="score" minOccurs="0" maxOccurs="1" type="decimal"
        <!-- When searching, the server's search ranking score for the entry. -->
      </score>
      </xs:complexContent>
		</search>
		<request>
		  xs:element name="request" type="Bundle.Request" minOccurs="0" maxOccurs="1"
		  <!-- Additional information about how this entry should be processed as part of a transaction or batch.  
		  For history, it shows how the entry was processed to create the version contained in the entry. -->
			<xs:complexType name="Bundle.Request">
				<method>xs:element name="method" minOccurs="1" maxOccurs="1" type="HTTPVerb"
        <!-- In a transaction or batch, this is the HTTP action to be executed for this entry. 
        In a history bundle, this indicates the HTTP action that occurred. -->
				<xs:complexType name="HTTPVerb">
					<xs:attribute name="value" type="HTTPVerb-list" use="optional"/>
				</xs:complexType>
				<xs:simpleType name="HTTPVerb-list">
					<xs:enumeration value="GET" />
					<xs:enumeration value="HEAD" />
					<xs:enumeration value="POST" />
					<xs:enumeration value="PUT" />
					<xs:enumeration value="DELETE" />
					<xs:enumeration value="PATCH" />
				</xs:simpleType>
				</method>
				<url>
				  xs:element name="url" minOccurs="1" maxOccurs="1" type="uri"
				  <!-- The URL for this entry, relative to the root (the address to which the request is posted).-->
				</url>
				<ifNoneMatch>xs:element name="ifNoneMatch" minOccurs="0" maxOccurs="1" type="string"</ifNoneMatch>
				<ifModifiedSince>xs:element name="ifModifiedSince" minOccurs="0" maxOccurs="1" type="instant"</ifModifiedSince>
				<ifMatch>xs:element name="ifMatch" minOccurs="0" maxOccurs="1" type="string"</ifMatch>
				<ifNoneExist>xs:element name="ifNoneExist" minOccurs="0" maxOccurs="1" type="string"</ifNoneExist>
			</xs:complexType>
		</request>
		<response>
      xs:element name="response" type="Bundle.Response" minOccurs="0" maxOccurs="1"
			<!-- A container for a collection of resources. -->
			<xs:complexType name="Bundle.Response">
  			<status>
  			  xs:element name="status" minOccurs="1" maxOccurs="1" type="string"
  			  <!-- The status code returned by processing this entry. 
  			  The status SHALL start with a 3 digit HTTP code (e.g. 404) 
  			  and may contain the standard HTTP description associated with the status code.   -->
  			</status>
	  		<location>
	  		  xs:element name="location" minOccurs="0" maxOccurs="1" type="uri"
	  		  <!-- The location header created by processing this operation, 
	  		  populated if the operation returns a location.   -->
	  		</location>
		  	<etag>
		  	  xs:element name="etag" minOccurs="0" maxOccurs="1" type="string"
		  	  <!-- The Etag for the resource, if the operation for the entry produced a versioned resource 
		  	  (used for Resource Metadata and Versioning and Managing Resource Contention(concurrency).   -->
		  	</etag>
			  <lastModified>
			    xs:element name="lastModified" minOccurs="0" maxOccurs="1" type="instant"
			    <!-- The date/time that the resource was modified on the server.   -->
			  </lastModified>
			  <outcome>
			    xs:element name="outcome" minOccurs="0" maxOccurs="1" type="ResourceContainer"
			    <!-- An OperationOutcome containing hints and warnings produced 
			    as part of processing this entry in a batch or transaction.   -->
			  </outcome>
			</xs:complexType>		  
		  <!-- Indicates the results of processing the corresponding 'request' entry in the batch 
		  or transaction being responded to or what the results of an operation where when returning history. -->
		</response>
	</entry>
	<signature>
	  xs:element name="signature" minOccurs="0" maxOccurs="1" type="Signature"
	  <!-- Digital Signature - base64 encoded. XML-DSig or a JWT.   -->
		<xs:complexType name="Signature">
		<type>
			<!-- 1..* Coding Indication of the reason the entity signed the object(s) -->
		</type>
		<when value="[instant]"/><!-- 1..1 When the signature was created -->
		<who>
			<!-- 1..1 Reference(Practitioner|PractitionerRole|RelatedPerson|Patient|Device|Organization) Who signed -->
		</who>
		<onBehalfOf>
			<!-- 0..1 Reference(Practitioner|PractitionerRole|RelatedPerson|Patient|Device|Organization) The party represented -->
		</onBehalfOf>
		<targetFormat value="[code]"/><!-- 0..1 The technical format of the signed resources -->
		<sigFormat value="[code]"/><!-- 0..1 The technical format of the signature -->
		<data value="[base64Binary]"/><!-- 0..1 The actual signature content (XML DigSig. JWS, picture, etc.) -->
    </xs:complexType>
	</signature>
</Bundle>


<Request namespace="Bundle.Entry" id="">
	<method>HTTPVerb</method>
	<url>uri</url>
	<MessageDefinition>
		<text>example shows text node as text-value of this element, but not in schema...</text>
		<url>minOccurs="0" maxOccurs="1" type="uri"</url>
		<identifier>minOccurs="0" maxOccurs="unbounded" type="Identifier"</identifier>
		<version>minOccurs="0" maxOccurs="1" type="string"</version>
		<name>minOccurs="0" maxOccurs="1" type="string"</name>
		<title>minOccurs="0" maxOccurs="1" type="string"</title>
		<replaces>minOccurs="0" maxOccurs="unbounded" type="canonical"</replaces>
		<status>minOccurs="1" maxOccurs="1" type="PublicationStatus"</status>
		<experimental>minOccurs="0" maxOccurs="1" type="boolean"</experimental>
		<date>minOccurs="1" maxOccurs="1" type="dateTime"</date>
		<publisher>minOccurs="0" maxOccurs="1" type="string"</publisher>
		<contact>minOccurs="0" maxOccurs="unbounded" type="ContactDetail"</contact>
		<description>minOccurs="0" maxOccurs="1" type="markdown"</description>
		<useContext>minOccurs="0" maxOccurs="unbounded" type="UsageContext"</useContext>
		<jurisdiction>minOccurs="0" maxOccurs="unbounded" type="CodeableConcept"</jurisdiction>
		<purpose>minOccurs="0" maxOccurs="1" type="markdown"</purpose>
		<copyright>minOccurs="0" maxOccurs="1" type="markdown"</copyright>
		<base>minOccurs="0" maxOccurs="1" type="canonical"</base>
		<parent>minOccurs="0" maxOccurs="unbounded" type="canonical"</parent>
		<!-- <xs:choice minOccurs="1" maxOccurs="1" > -->
		<eventCoding>type="Coding"</eventCoding>
		<eventUri>type="uri"</eventUri>
		<!-- </xs:choice> -->
		<category>minOccurs="0" maxOccurs="1" type="MessageSignificanceCategory"</category>
		<focus>
			type="MessageDefinition.Focus" minOccurs="0" maxOccurs="unbounded"
			<code>minOccurs="1" maxOccurs="1" type="code"</code>
			<profile>minOccurs="0" maxOccurs="1" type="canonical"</profile>
			<min>minOccurs="1" maxOccurs="1" type="unsignedInt"</min>
			<max>minOccurs="0" maxOccurs="1" type="string"</max>
		</focus>
		<responseRequired>minOccurs="0" maxOccurs="1" type="messageheaderResponseRequest"</responseRequired>
		<allowedResponse>
			type="MessageDefinition.AllowedResponse" minOccurs="0" maxOccurs="unbounded"
			<message>minOccurs="1" maxOccurs="1" type="canonical"</message>
			<situation>minOccurs="0" maxOccurs="1" type="markdown"</situation>
		</allowedResponse>
		<graph>minOccurs="0" maxOccurs="unbounded" type="canonical"</graph>
	</MessageDefinition>
